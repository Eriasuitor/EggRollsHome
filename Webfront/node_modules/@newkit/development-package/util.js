const fs = require('fs');
const path = require('path');
const notifier = require('node-notifier');
const gulpUtil = require('gulp-util');

module.exports = {
  root(...args) {
    return path.join(__dirname, ...args);
  },
  cwd(...args) {
    return path.join(process.cwd(), ...args);
  },
  notify(message, title = 'Central Platform Notify!') {
    notifier.notify({ title, message });
  },
  printWebpackStats(err, stats) {
    if (err) {
      throw new gulpUtil.PluginError('webpack', err);
    }
    let statColor = stats.compilation.warnings.length < 1 ? 'green' : 'yellow';
    if (stats.compilation.warnings.length > 0) {
      stats.compilation.errors.forEach(error => {
        statColor = 'red';
      });
    } else {
      gulpUtil.log(stats.toString({
        colors: gulpUtil.colors.supportsColor,
        hash: false,
        timings: true,
        chunks: true,
        chunkModules: false,
        modules: false,
        children: false,
        version: true,
        cached: true,
        cachedAssets: true,
        reasons: false,
        source: false,
        errorDetails: false
      }));
    }
  },
  fileExists(file) {
    return fs.existsSync(file);
  }
};
