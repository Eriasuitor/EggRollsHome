variables:
  Solution: back-end\EggRolls.sln
  BuildType: Debug
  OutDir: BuildOutput
  TestOutDir: TestOutput
  SonarQubeProject: egg-rolls-api
  SonarQubeProjectKey: 816b5738afed42fa99c29df26f681284
  SonarQubeProjectVersion: master

before_script:
  - "@echo off"
  # output environment variables (usefull for debugging, propably not what you want to do if your ci server is public)
  - echo.
  - set
  - echo.

stages:
  - test
  - build

unit-testing:
  stage: test
  script:
  - 'setlocal enabledelayedexpansion'
  # Initialize target report folder variables
  - 'set ProjectReportHome=%CD%\Report'
  - 'set CoverageReport=%ProjectReportHome%\coverage.xml'
  - 'set NUnitResult=%ProjectReportHome%\NUnitResults.xml'
  - 'mkdir %ProjectReportHome%'
  - 'echo Current directory is %CD%'
  - 'back-end\.nuget\NuGet.exe locals all -clear'
  # nuget restore
  #- 'back-end\.nuget\NuGet.exe restore back-end\EggRolls.sln'
  # Start Sonar Scanner
  - 'MSBuild.SonarQube.Runner.exe begin /k:"%SonarQubeProjectKey%" /n:"%SonarQubeProject%" /v:"%SonarQubeProjectVersion%" /d:sonar.cs.opencover.reportsPaths="%CoverageReport%" /d:sonar.cs.nunit.reportsPaths="%NUnitResult%'
  # Start to Build solution 
  - 'msbuild.exe "%Solution%" /t:Clean,ReBuild /p:Configuration=Debug;OutDir=%CD%\%TestOutDir%'
  # Collect Test assemblies after build completed successfully
  - 'SET NUnitCmdLine='
  - 'dir /s /b %TestOutDir%\\*Tests.dll > test_assemblies.txt '
  # Find all test assemblies, combine all test assemblies
  - 'for /f %%f in (test_assemblies.txt) do SET NUnitCmdLine=!NUnitCmdLine! %%f'
  - 'echo -----------------------------------------------------------------------------------'
  - 'echo !NUnitCmdLine!'
  # Run Code Coverage against nunit3-console, targetdir parameter will make nunit3-console produce test result into that directory
  - 'OpenCover.Console.exe -target:"%Nunit_Runner%\nunit-console.exe" -targetargs:"!NUnitCmdLine! /noshadow /domain=none /framework:net-4.0 /result=%NUnitResult%" -targetdir:"%CD%\%TestOutDir%" -register -output:"%CoverageReport%"'
  # Collect Coverage and unit test result for Sonar Scanner
  - 'MSBuild.SonarQube.Runner.exe end'
  # Send Notification
  - 'echo.'
  #- 'echo Sending Notification...'
  #- 'ci-notifier /to:%Notification_Receivers% /subject:"%Notification_Subject%" /nunit-report:%UnitReportUrl% /coverage-report:%CoverageReportUrl%'
  # Use http mode to clone CI tools to current build
  - 'git clone http://trgit2/edi/ci.git' 
  # Check for Unit Test Result, fail the build if any test not passed
  - 'python ci\check-test-result.py "%NUnitResult%"'
  except:    
  - tags


build-project:
  stage: build
  script:
  # Start to Build solution 
  - msbuild.exe "%Solution%" /t:Clean,ReBuild /p:Configuration=Release;OutDir=%CD%\Build\Release
  except:    
  - tags
